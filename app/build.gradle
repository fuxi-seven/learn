apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.hly.gradle'

android {
    compileSdkVersion adcompileSdkVersion
    //AAPT: error: failed to read PNG signature: file does not start with PNG signature.
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    defaultConfig {
        if (isRelease) {
            applicationId adapplicationId
        }
        minSdkVersion adminSdkVersion
        targetSdkVersion adtargetSdkVersion
        versionCode adversionCode
        versionName adversionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            //定制版本变量,编译后在BuildConfig里面会生成对应的变量,可以在java中定制使用
            //变量类型，变量名，变量内容
            buildConfigField("boolean", "isRelease", String.valueOf(isRelease))
            buildConfigField("int", "flag", "0")
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "isRelease", String.valueOf(isRelease))
            buildConfigField("int", "flag", "1")
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    //out date define
    /*dataBinding {
        enabled = true
    }*/

    ndkVersion '21.1.6352462'

    buildFeatures {
        dataBinding = true
    }

    lintOptions {
        abortOnError false
    }

    //配置资源环境，方便测试环境，打包不集成到正式环境
    sourceSets {
        main {
            if (isRelease) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //release时debug目录下文件不需要 合并到主工程
                    exclude '**/debug/**'
                }
            } else {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation androidSupportLib.appcompat
    implementation androidSupportLib.constraintlayout
    implementation androidSupportLib.lifecycleextensions
    implementation project(path: ':httpRequest')
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.1'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation androidSupportLib.material
    implementation androidSupportLib.corektx
    implementation androidSupportLib.kotlin
    implementation project(path: ':lib')

    // Android 支持 Rxjava
    // 此处一定要注意使用RxJava2的版本
    implementation androidSupportLib.rxjava2
    implementation androidSupportLib.rxandroid

    // Android 支持 Retrofit
    implementation androidSupportLib.retrofit

    // 衔接 Retrofit & RxJava
    // 此处一定要注意使用RxJava2的版本
    implementation androidSupportLib.rxjava2adapter

    // 支持Gson解析
    implementation androidSupportLib.gson

    // rxbinding
    implementation androidSupportLib.rxbinding

    //Glide
    implementation androidSupportLib.glide
    annotationProcessor androidSupportLib.glidecompiler

    //apt
    implementation project(':apt-annotation')
    annotationProcessor project(':apt-processor')
    implementation project(':apt-sdk')

    //AutoService组件化
    implementation project(':autoServiceSecondModule')
    implementation project(':autoServiceFirstModule')
    implementation project(':autoServiceMainModule')
    implementation project(':autoServiceCommonLibrary')

    //Navigation
    implementation 'androidx.navigation:navigation-fragment:2.3.1'
    implementation 'androidx.navigation:navigation-ui:2.3.1'
}
repositories {
    mavenCentral()
}

releaseHelper {
    appName = "hlyLearn"
    uKey = "c9d2625c0cf221d8f4a98738f4c05e9a"
    apiKey = "fac8875534d045a2be3f229abd46cc3e"
}
